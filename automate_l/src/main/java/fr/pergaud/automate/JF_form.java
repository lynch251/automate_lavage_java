/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.pergaud.automate;

import java.awt.Color;
import java.awt.event.ActionEvent;

import fr.pergaud.automate.Machine.AlimentationMachine;
import fr.pergaud.automate.Machine.EtatMachine;
import javax.swing.GroupLayout.Alignment;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.Timer;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import javax.swing.SwingConstants;
import java.awt.event.ActionListener;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Path;

import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.Panel;
import java.awt.Font;

/**
 *
 * @author Pierre
 */
public class JF_form extends javax.swing.JFrame implements IfMachineListener {

    /**
     * Creates new form JF_form
     */
    private Machine laMachine;
    /**
     * Ce paramètre correspond au temps nécessaire pour chaque cycle. une fois écoulé, il déclenche le suivant ou la fin du lavage.
     */
    private Timer chronoCycle;
    
    public JF_form (Machine laMachineAGerer) throws MalformedURLException {
    	setResizable(false);
        initComponents();
        // inscription du formulaire à la liste des listeners.
        this.laMachine = laMachineAGerer;
        laMachineAGerer.addMachineListener(this);
        
        // Initialiser la fenetre selon l'état initial prédéfini
        this.etatMachine(laMachineAGerer.getEtatMachine());
        this.alimentationMachine(laMachineAGerer.getAlimentationMachine());
        this.info(laMachineAGerer.getInfoMessage());
        this.isRunning(laMachineAGerer.getIsRunning());
        
    }

    @Override
    public void etatMachine(EtatMachine pEtatMachine) {
    	
    	
    	if(pEtatMachine == EtatMachine.UrgenceAttenteLavage || pEtatMachine == EtatMachine.UrgenceAttenteRinçage) {
    		this.BT_StopUrgence.setEnabled(false);
    		this.BT_Reprendre.setEnabled(true);
    		this.I_Infos.setForeground(Color.red);

    	}
    	else if (pEtatMachine != EtatMachine.UrgenceAttenteLavage & pEtatMachine != EtatMachine.UrgenceAttenteRinçage & laMachine.getIsRunning() == false) {

    		this.BT_StopUrgence.setEnabled(false);
    		this.BT_Reprendre.setEnabled(false);
    		this.I_Infos.setForeground(Color.white);
    		
    	}
    	else {
    		this.BT_StopUrgence.setEnabled(true);
    		this.BT_Reprendre.setEnabled(false);
    		this.I_Infos.setForeground(Color.white);
    	}
    	this.I_Statut.setText(pEtatMachine.toString());
    }
    
    @Override
    public void alimentationMachine(AlimentationMachine pAlimentationMachine) {
    	
    	if (pAlimentationMachine == AlimentationMachine.Allumee) {
    		this.JT_Alimentation.setSelected(true);
    		this.JT_Alimentation.setText(pAlimentationMachine.toString());
    		this.JT_Alimentation.setForeground(Color.green);
    	}
    	else {
    		this.JT_Alimentation.setSelected(false);
    		this.JT_Alimentation.setText(pAlimentationMachine.toString());
    		this.JT_Alimentation.setForeground(Color.red);
    	}
    }
    
    @Override
    public void info(String pMessage) {
    	this.I_Infos.setText(pMessage);
    }
    
 
    
    @Override
    public void isRunning(Boolean pIsRunning) {
    	if (pIsRunning == true) {
    		this.BT_AddPieces.setEnabled(false);
    	}
    	else {
    		this.BT_AddPieces.setEnabled(true);
    	}
    	
    }
    
    @Override
    public void indiquerPourcentage(int pProgression) {
    	this.PG_Progression.setValue(pProgression);
    }
    
    @Override
    public void indiquerTempsRestant(String pTempsRestant) {
    	this.I_Infos.setText(String.valueOf(pTempsRestant));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws MalformedURLException 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws MalformedURLException {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        
        
        JPanel panel_1 = new JPanel();
		
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 755, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 296, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(0, Short.MAX_VALUE))
        );
        panel_1.setLayout(null);
        
        I_Infos = new JLabel();
        I_Infos.setFont(new Font("Lucida Grande", Font.BOLD, 14));
        I_Infos.setForeground(Color.WHITE);
        I_Infos.setBounds(17, 6, 517, 16);
        panel_1.add(I_Infos);
        I_Infos.setText("...");
        I_Infos.setHorizontalTextPosition(SwingConstants.CENTER);
        I_Infos.setHorizontalAlignment(SwingConstants.LEFT);
        JT_Alimentation = new javax.swing.JToggleButton();
        JT_Alimentation.setBounds(262, 41, 142, 29);
        panel_1.add(JT_Alimentation);
        
                JT_Alimentation.setText("...");
                
                        BT_AddPieces = new javax.swing.JButton();
                        BT_AddPieces.setBounds(552, 6, 154, 29);
                        panel_1.add(BT_AddPieces);
                        
                                BT_AddPieces.setText("Ajouter une pièce");
                                
                                JPanel panel = new JPanel();
                                panel.setBackground(new Color(0, 204, 255));
                                panel.setBounds(538, 53, 186, 212);
                                panel_1.add(panel);
                                panel.setLayout(null);
                                
                                JLabel L_gif_coins = new JLabel("gif");
                                L_gif_coins.setIcon(new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/coins.gif")));
                                L_gif_coins.setHorizontalAlignment(SwingConstants.CENTER);
                                L_gif_coins.setBounds(6, 6, 174, 206);
                                panel.add(L_gif_coins);
                                
                                L_gif_washing = new JLabel("gif");
                                L_gif_washing.setIcon(new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/washing.gif")));
                                L_gif_washing.setBounds(0, 0, 174, 206);
                                panel.add(L_gif_washing);
                                L_gif_washing.setHorizontalAlignment(SwingConstants.CENTER);
                                
                                L_gif_broken = new JLabel("gif");
                                L_gif_broken.setIcon(new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/broken.gif")));
                                L_gif_broken.setHorizontalAlignment(SwingConstants.CENTER);
                                L_gif_broken.setBounds(0, 0, 174, 206);
                                panel.add(L_gif_broken);
                                
                                L_gif_drying = new JLabel("gif");
                                L_gif_drying.setIcon(new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/drying.gif")));
                                L_gif_drying.setHorizontalAlignment(SwingConstants.CENTER);
                                L_gif_drying.setBounds(0, 0, 174, 206);
                                panel.add(L_gif_drying);
                                I_Statut = new javax.swing.JLabel();
                                I_Statut.setFont(new Font("Lucida Grande", Font.BOLD, 15));
                                I_Statut.setForeground(Color.WHITE);
                                I_Statut.setBounds(228, 82, 203, 16);
                                panel_1.add(I_Statut);
                                
                                        I_Statut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                        I_Statut.setText("statut");
                                        I_Statut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                                        BT_StopUrgence = new javax.swing.JButton();
                                        BT_StopUrgence.setBounds(6, 60, 140, 29);
                                        panel_1.add(BT_StopUrgence);
                                        BT_StopUrgence.setForeground(Color.RED);
                                        
                                                BT_StopUrgence.setText("Arrêt d'urgence");
                                                
                                                BT_Reprendre = new JButton("Reprendre");
                                                BT_Reprendre.setBounds(6, 101, 107, 29);
                                                panel_1.add(BT_Reprendre);
                                                
                                                PG_Progression = new JProgressBar();
                                                PG_Progression.setBounds(228, 110, 229, 20);
                                                panel_1.add(PG_Progression);
                                                
                                                lblNewLabel = new JLabel("New label");
                                                lblNewLabel.setIcon(new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/close-up-photo-of-water-drops-under-blue-sky-during-daytime.jpg")));
                                                lblNewLabel.setBounds(0, 0, 755, 296);
                                                panel_1.add(lblNewLabel);
                                                BT_Reprendre.addActionListener(new ActionListener() {
                                                	public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                        BT_ReprendreActionPerformed(evt);
                                                	}
                                                });
                                                BT_StopUrgence.addActionListener(new java.awt.event.ActionListener() {
                                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                        BT_FermerActionPerformed(evt);
                                                    }
                                                });
                                BT_AddPieces.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        BT_OuvrirActionPerformed(evt);
                                    }
                                });
                JT_Alimentation.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        JT_StatutActionPerformed(evt);
                    }
                });
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JT_StatutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JT_StatutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JT_StatutActionPerformed
	/**
	 * 
	 * Bouton reprise
	 */
    private void BT_ReprendreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_FermerActionPerformed
	        
	    	this.laMachine.AppuiSurBTReprendre();
    }
    /**
     * 
     * Bouton arret d'urgence
     */
    private void BT_FermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_FermerActionPerformed
        
    	this.laMachine.AppuiSurBTArretUrgence();
    }//GEN-LAST:event_BT_FermerActionPerformed
    
    /**
     * 
     * Bouton ajoutJetons
     */
    private void BT_OuvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_OuvrirActionPerformed
        
    	this.laMachine.AppuiSurBTAjoutJeton();
    	
        
    }//GEN-LAST:event_BT_OuvrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JF_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JF_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JF_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JF_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                Machine p = new Machine();     
                try {
					new JF_form(p).setVisible(true);
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}  
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_StopUrgence;
    private javax.swing.JButton BT_AddPieces;
    private javax.swing.JLabel I_Statut;
    private javax.swing.JToggleButton JT_Alimentation;
    private JLabel I_Infos;
    private JProgressBar PG_Progression;
    private JButton BT_Reprendre;
    private Icon I_illustration;
    private JLabel L_illustration;
    private JFrame JF_form;
    private JLabel lblNewLabel;
    private JLabel L_gif_coins;
    private ImageIcon imgCoins = new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/coins.gif"));
    private ImageIcon imgDrying = new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/drying.gif"));
    private ImageIcon imgBroken = new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/broken.gif"));
    private ImageIcon imgWashing = new ImageIcon(JF_form.class.getResource("/fr/pergaud/automate/washing.gif"));
    private JPanel panel;
    private JPanel panel_1;

    private JLabel L_gif_washing;
    private JLabel L_gif_broken;
    private JLabel L_gif_drying;
}
